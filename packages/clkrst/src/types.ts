/// Module id returned by [8.0.0+] pcv services
/// See also: https://switchbrew.org/wiki/PCV_services#Modules
export enum PcvModuleId {
	CpuBus = 0x40000001,
	GPU = 0x40000002,
	I2S1 = 0x40000003,
	I2S2 = 0x40000004,
	I2S3 = 0x40000005,
	PWM = 0x40000006,
	I2C1 = 0x02000001,
	I2C2 = 0x02000002,
	I2C3 = 0x02000003,
	I2C4 = 0x02000004,
	I2C5 = 0x02000005,
	I2C6 = 0x02000006,
	SPI1 = 0x07000000,
	SPI2 = 0x07000001,
	SPI3 = 0x07000002,
	SPI4 = 0x07000003,
	DISP1 = 0x40000011,
	DISP2 = 0x40000012,
	ISP = 0x40000013,
	VI = 0x40000014,
	SDMMC1 = 0x40000015,
	SDMMC2 = 0x40000016,
	SDMMC3 = 0x40000017,
	SDMMC4 = 0x40000018,
	OWR = 0x40000019,
	CSITE = 0x4000001a,
	TSEC = 0x4000001b,
	MSELECT = 0x4000001c,
	HDA2CODEC_2X = 0x4000001d,
	ACTMON = 0x4000001e,
	I2C_SLOW = 0x4000001f,
	SOR1 = 0x40000020,
	SATA = 0x40000021,
	HDA = 0x40000022,
	XUSB_CORE_HOST = 0x40000023,
	XUSB_FALCON = 0x40000024,
	XUSB_FS = 0x40000025,
	XUSB_CORE_DEV = 0x40000026,
	XUSB_SS_HOSTDEV = 0x40000027,
	UARTA = 0x03000001,
	UARTB = 0x35000405,
	UARTC = 0x3500040f,
	UARTD = 0x37000001,
	HOST1X = 0x4000002c,
	ENTROPY = 0x4000002d,
	SOC_THERM = 0x4000002e,
	VIC = 0x4000002f,
	NVENC = 0x40000030,
	NVJPG = 0x40000031,
	NVDEC = 0x40000032,
	QSPI = 0x40000033,
	VI_I2C = 0x40000034,
	TSECB = 0x40000035,
	APE = 0x40000036,
	ACLK = 0x40000037,
	UARTAPE = 0x40000038,
	EMC = 0x40000039,
	PLLE0_0 = 0x4000003a,
	PLLE0_1 = 0x4000003b,
	DSI = 0x4000003c,
	MAUD = 0x4000003d,
	DPAUX1 = 0x4000003e,
	MIPI_CAL = 0x4000003f,
	UART_FST_MIPI_CAL = 0x40000040,
	OSC = 0x40000041,
	SCLK = 0x40000042,
	SOR_SAFE = 0x40000043,
	XUSB_SS = 0x40000044,
	XUSB_HOST = 0x40000045,
	XUSB_DEV = 0x40000046,
	EXTPERIPH1 = 0x40000047,
	AHUB = 0x40000048,
	HDA2HDMICODEC = 0x40000049,
	PLLP5 = 0x4000004a,
	USBD = 0x4000004b,
	USB2 = 0x4000004c,
	PCIE = 0x4000004d,
	AFI = 0x4000004e,
	PCIEXCLK = 0x4000004f,
	PEX_USB_UPHY = 0x40000050,
	XUSB_PADCTL = 0x40000051,
	APBDMA = 0x40000052,
	USB2_TRK = 0x40000053,
	PLLE0_2 = 0x40000054,
	PLLE0_3 = 0x40000055,
	CEC = 0x40000056,
	EXTPERIPH2 = 0x40000057,
}

// Clock list type returned by GetPossibleClockRates
export enum PcvClockRatesListType {
	Invalid = 0,
	Discrete = 1,
	Range = 2,
}
